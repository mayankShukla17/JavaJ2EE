package org.btm.transactionApp;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Scanner;
public class JdbcTransaction 
{
	public static void main(String[] args) 
	{
		Connection con=null;
		PreparedStatement prest=null;
		PreparedStatement prest1=null;

		String query="insert into btm.studentedu values(?,?,?,?)";
		String query1="insert into btm.studentper values(?,?,?)";
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the id");
		int id=sc.nextInt();
		System.out.println("enter the name");
		String name=sc.next();
		System.out.println(" enter dept name");
		String dept=sc.next();
		System.out.println("enter the perc");
		double perc=sc.nextDouble();
		System.out.println("enter the place");
		String place=sc.next();
		sc.close();
		try 
		{
			Class.forName("com.mysql.jdbc.Driver");
			System.out.println("driver classes loaded");
//			con=DriverManager.getConnection("jdbc:mysql://localhost:3306?user=root&password=Root@123");
			con=DriverManager.getConnection("jdbc:mysql://localhost:3306?user=root&password=Root@123&autoReconnect=true&useSSL=false");
			System.out.println("connection established");

			//Disable autocommit Mode
			con.setAutoCommit(false);
			prest=con.prepareStatement(query);
			// set the value for placeholder before execution
			prest.setInt(1, id);
			prest.setString(2,name);
			prest.setString(3, dept);
			prest.setDouble(4, perc);
			prest.executeUpdate();
			System.out.println("student educational details executed");

			prest1=con.prepareStatement(query1);
			// set the value for placeholder before execution
			prest1.setInt(1, id);
			prest1.setString(2,name);
			prest1.setString(3, place);
			prest1.executeUpdate();
			System.out.println("student personal details executed");

			con.commit();
		} 
		catch (ClassNotFoundException | SQLException e) 
		{
			try
			{
				con.rollback();
				System.out.println("operation rollback");
			}
			catch (SQLException e1) 
			{
				e1.printStackTrace();
			}
			e.printStackTrace();
		}
		finally 
		{
			if(prest1!=null) 
			{

				try 
				{
					prest1.close();
				} 
				catch (SQLException e) 
				{
					e.printStackTrace();
				}
			}
			if(prest!=null)
			{
				try 
				{
					prest.close();
				} 
				catch (SQLException e) 
				{
					e.printStackTrace();
				}
			}
			if(con!=null)
			{
				try 
				{
					con.close();
				} 
				catch (SQLException e) 
				{
					e.printStackTrace();
				}
			}
		}
	}
}
